Highcharts.setOptions({lang:{thousandsSep:","}});let chartIdAmz=document.getElementById("chart-container-amazon-price-increases");function drawHighcharts(){Highcharts.chart(chartIdAmz,{chart:{type:"bar",styledMode:!0,spacingBottom:25,spacingRight:100,spacingLeft:0,spacingTop:20},title:{text:null},plotOptions:{series:{groupPadding:.1}},series:[{name:"20%+",data:[78,77,66,61,59,59,54],pointPadding:-.35,pointPlacement:-.15},{name:"50%+",data:[31,23,20,45,11,24,5],pointPadding:.15,pointPlacement:.28}],legend:{align:"right",symbolRadius:0,verticalAlign:"top",x:10,itemMarginTop:-10},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:5,categories:["Disinfectant wipes","Hand sanitizer","Masks","Patio heaters","Hand soap","Oral thermometers","Pulse oximeters"]},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"},max:80},credits:{enabled:!1},tooltip:{shadow:!1,padding:10,shared:!0,valueSuffix:"%"},responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:15},legend:{align:"left",x:-8},tooltip:{enabled:!1},yAxis:{ticks:5,max:80}}}]}})}setTimeout(function(){if(""===chartIdAmz.innerHTML){document.getElementsByClassName("chart-area");for(var t=0;t<chartArea.length;t++)chartArea[t].style.display="none";document.getElementById("chart-fallback").innerHTML+='<img src="https://fm-static.cnbc.com/awsmedia/chart/2019/10/08/chart-error_wide.1570569331252.png" style="width: 100%;max-width:660px">'}},500),"complete"===document.readyState||"interactive"===document.readyState?drawHighcharts():document.addEventListener("DOMContentLoaded",drawHighcharts);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
